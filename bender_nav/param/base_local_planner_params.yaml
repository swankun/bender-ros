# base_local_planner: "base_local_planner/TrajectoryPlannerROS"
base_local_planner: "teb_local_planner/TebLocalPlannerROS"

TrajectoryPlannerROS:
  acc_lim_x: 2.5
  acc_lim_y: 2.5
  acc_lim_theta: 3.2
  max_vel_x: 0.7
  min_vel_x: 0.1
  max_vel_theta: 1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 0.4
  backup_vel: -0.1
  escape_vel: -0.1
  holonomic_robot: true
  y_vels: [-0.3, -0.1, 0.1, 0.3]
  yaw_goal_tolerance: 0.05
  xy_goal_tolerance: 0.10
  latch_xy_goal_tolerance: false
  sim_time: 1.0
  sim_granularity: 0.025
  angular_sim_granularity: 0.025
  vx_samples: 3
  vtheta_samples: 20
  controller_frequency: 20.0
  meter_scoring: false
  pdist_scale: 0.6
  gdist_scale: 0.8
  occdist_scale: 0.01
  heading_lookahead: 0.325
  heading_scoring: true
  heading_scoring_timestep: 0.8
  dwa: true
  publish_cost_grid_pc: false
  global_frame_id: odom
  oscillation_reset_dist: 0.05
  prune_plan: true

# TebLocalPlannerROS:
#   # Trajectory
#   teb_autosize: True
#   dt_ref: 0.2
#   dt_hysteresis: 0.02
#   # max_samples: 300
#   min_samples: 3
#   global_plan_overwrite_orientation: True
#   allow_init_with_backwards_motion: False
#   max_global_plan_lookahead_dist: -0.1
#   global_plan_viapoint_sep: -0.1
#   # global_plan_viapoint_sep: 3.0  # small positive value seems to reduce strafing
#   global_plan_prune_distance: 1
#   exact_arc_length: False
#   feasibility_check_no_poses: 1
#   publish_feedback: False
  
#   # Robot
#   max_vel_x: 0.7
#   max_vel_x_backwards: 0.2
#   max_vel_y: 0.4
#   max_vel_theta: 0.707
#   acc_lim_x: 5.0
#   acc_lim_y: 3.0
#   acc_lim_theta: 1.0
#   min_turning_radius: 0.0 # omni-drive robot (can turn on place!)

#   footprint_model:
#     type: "point"
#     # type: "polygon"
#     # vertices: [[-0.6, -0.4], [-0.6, 0.4], [0.6, 0.4], [0.6, -0.4]]
#     # type: "circular"
#     # radius: 0.6

#   # GoalTolerance
#   xy_goal_tolerance: 0.2
#   yaw_goal_tolerance: 0.2
#   free_goal_vel: False
#   complete_global_plan: False
    
#   # Obstacles
#   min_obstacle_dist: 0.5 # This value must also include our robot radius, since footprint_model is set to "point".
#   inflation_dist: 1.0
#   include_costmap_obstacles: True
#   include_dynamic_obstacles: False
#   costmap_obstacles_behind_robot_dist: 3.0
#   obstacle_poses_affected: 30
#   obstacle_proximity_lower_bound: 0.6
#   obstacle_proximity_upper_bound: 1.2
#   obstacle_proximity_ratio_max_vel: 0.2
#   costmap_converter_plugin: ""
#   costmap_converter_spin_thread: True
#   costmap_converter_rate: 5

#   # Optimization
#   no_inner_iterations: 4
#   no_outer_iterations: 4
#   optimization_activate: True
#   optimization_verbose: False
#   penalty_epsilon: 0.1
#   obstacle_cost_exponent: 1.0
#   weight_max_vel_x: 1
#   weight_max_vel_y: 1
#   weight_max_vel_theta: 1
#   weight_acc_lim_x: 1
#   weight_acc_lim_y: 0  # If robot is holonomic, set to 0 to speed up computation
#   weight_acc_lim_theta: 1
#   weight_kinematics_nh: 0.1 # WE HAVE A HOLONOMIC ROBOT, JUST ADD A SMALL PENALTY (larger value reduces strafing)
#   weight_kinematics_forward_drive: 0.5
#   weight_kinematics_turning_radius: 0.0
#   weight_optimaltime: 0.1 # must be > 0
#   weight_shortest_path: 0
#   weight_obstacle: 20
#   weight_inflation: 0.1
#   weight_dynamic_obstacle: 100
#   weight_dynamic_obstacle_inflation: 0.4
#   weight_viapoint: 1.0
#   weight_adapt_factor: 2

#   # Homotopy Class Planner
#   enable_homotopy_class_planning: False # CPU HOGGER
#   enable_multithreading: True
#   max_number_classes: 4
#   selection_cost_hysteresis: 1.0
#   selection_prefer_initial_plan: 0.9
#   selection_obst_cost_scale: 1.0
#   selection_alternative_time_cost: False

#   roadmap_graph_no_samples: 15
#   roadmap_graph_area_width: 5
#   roadmap_graph_area_length_scale: 1.0
#   h_signature_prescaler: 0.5
#   h_signature_threshold: 0.1
#   obstacle_heading_threshold: 0.45
#   switching_blocking_period: 0.0
#   viapoints_all_candidates: True
#   delete_detours_backwards: True
#   max_ratio_detours_duration_best_duration: 3.0
#   visualize_hc_graph: False
#   visualize_with_time_as_z_axis_scale: False

#   # Recovery
#   shrink_horizon_backup: True
#   shrink_horizon_min_duration: 10
#   oscillation_recovery: True
#   oscillation_v_eps: 0.1
#   oscillation_omega_eps: 0.1
#   oscillation_recovery_min_duration: 10
#   oscillation_filter_duration: 10


TebLocalPlannerROS: 
  # Trajectory
  teb_autosize: true
  dt_ref: 0.25
  dt_hysteresis: 0.01
  global_plan_overwrite_orientation: true
  allow_init_with_backwards_motion: true
  max_global_plan_lookahead_dist: 3.0
  force_reinit_new_goal_dist: 1.0
  force_reinit_new_goal_angular: 0.78
  feasibility_check_no_poses: 5
  feasibility_check_lookahead_distance: -1.0
  exact_arc_length: false
  publish_feedback: false
  control_look_ahead_poses: 1
  prevent_look_ahead_poses_near_goal: 0
  visualize_with_time_as_z_axis_scale: false

  # ViaPoints
  global_plan_viapoint_sep: -0.1
  global_plan_prune_distance: 1.0
  via_points_ordered: false
  
  # Robot
  footprint_model:
    type: "point"
    # type: "polygon"
    # vertices: [[-0.6, -0.4], [-0.6, 0.4], [0.6, 0.4], [0.6, -0.4]]
    # type: "circular"
    # radius: 0.6
  max_vel_x: 0.7
  max_vel_x_backwards: 0.3
  max_vel_theta: 0.785
  acc_lim_x: 0.5
  acc_lim_theta: 0.5
  is_footprint_dynamic: false
  use_proportional_saturation: false
  transform_tolerance: 0.5
  min_turning_radius: 0.0
  wheelbase: 0.0
  cmd_angle_instead_rotvel: false
  max_vel_y: 0.3
  max_vel_trans: 0.0
  acc_lim_y: 0.5

  # GoalTolerance
  xy_goal_tolerance: 0.15
  yaw_goal_tolerance: 0.174
  free_goal_vel: false
  trans_stopped_vel: 0.02
  theta_stopped_vel: 0.01

  # Obstacles
  min_obstacle_dist: 0.5 # This value must also include our robot radius, since footprint_model is set to "point".
  inflation_dist: 0.6
  include_costmap_obstacles: true
  include_dynamic_obstacles: false
  costmap_obstacles_behind_robot_dist: 3.0
  obstacle_poses_affected: 30
  costmap_converter_plugin: ""
  costmap_converter_spin_thread: false
  costmap_converter_rate: 5

  # Optimization
  no_inner_iterations: 5
  no_outer_iterations: 4
  optimization_activate: true
  optimization_verbose: false
  penalty_epsilon: 0.1
  obstacle_cost_exponent: 1.0
  weight_max_vel_x: 2.0
  weight_max_vel_y: 2.0
  weight_max_vel_theta: 1.0
  weight_acc_lim_x: 1.0
  weight_acc_lim_y: 1.0  # If robot is holonomic, set to 0 to speed up computation
  weight_acc_lim_theta: 1.0
  weight_kinematics_nh: 0.5 # WE HAVE A HOLONOMIC ROBOT, JUST ADD A SMALL PENALTY (larger value reduces strafing)
  weight_kinematics_forward_drive: 2.0
  weight_kinematics_turning_radius: 0.0
  weight_optimaltime: 5.0 # must be > 0
  weight_shortest_path: 3.0
  weight_obstacle: 50
  weight_inflation: 0.1
  weight_dynamic_obstacle: 100
  weight_dynamic_obstacle_inflation: 0.4
  weight_velocity_obstacle_ratio: 10.0
  weight_viapoint: 1.0
  weight_adapt_factor: 2

  # Homotopy Class Planner
  enable_homotopy_class_planning: true # CPU HOGGER
  enable_multithreading: true
  max_number_classes: 4
  max_number_plans_in_current_class: 4
  selection_cost_hysteresis: 1.0
  selection_prefer_initial_plan: false
  selection_obst_cost_scale: 100.0
  selection_viapoint_cost_scale: 1.0
  selection_dropping_probability: 0.1
  selection_alternative_time_cost: false
  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  roadmap_graph_area_length_scale: 1.0
  h_signature_prescaler: 0.5
  h_signature_threshold: 0.1
  obstacle_heading_threshold: 0.45
  switching_blocking_period: 0.0
  viapoints_all_candidates: true
  delete_detours_backwards: true
  max_ratio_detours_duration_best_duration: 3.0
  visualize_hc_graph: false
  visualize_with_time_as_z_axis_scale: false

  # Recovery
  shrink_horizon_backup: true
  shrink_horizon_min_duration: 10
  oscillation_recovery: true
  oscillation_v_eps: 0.1
  oscillation_omega_eps: 0.1
  oscillation_recovery_min_duration: 10
  oscillation_filter_duration: 10
